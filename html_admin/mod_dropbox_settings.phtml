{% extends request.ajax ? "layout_blank.phtml" : "layout_default.phtml" %}
{% import "macro_functions.phtml" as mf %}
{% block meta_title %}Dropbox extension settings{% endblock %}
{% set active_menu = 'system' %}

{% block breadcrumbs %}
<ul>
    <li class="firstB"><a href="{{ '/'|alink }}">{% trans 'Home' %}</a></li>
    <li><a href="{{ 'system'|alink }}">{% trans 'Settings' %}</a></li>
    <li class="lastB">{% trans 'Dropbox module settings' %}</li>
</ul>
{% endblock %}

{% block content %}

<div class="widget">
    <div class="head">
        <h5 class="iCog">{% trans 'Dropbox extension settings' %}</h5>
    </div>

    {% set params = admin.extension_config_get({"ext":"mod_dropbox"}) %}
    <form method="post" action="{{ 'api/admin/extension/config_save'|link }}" class="mainForm api-form" data-api-msg="{% trans 'Configuration updated' %}">
        <div class="help">
            <h3>{% trans 'Dropbox extension settings' %}</h3>
            <p>{% trans 'You need to take following steps in order to integrate Dropbox into your BoxBilling' %}:
            <p>1. {% trans 'Create new Dropbox API app' %}: <a href="https://www.dropbox.com/developers/apps/create" target="_blank">https://www.dropbox.com/developers/apps/create</a></p>
            <p>2. {% trans 'Click on' %} <strong>Dropbox API app</strong></p>
            <p>3. {% trans 'For question' %} <i>What type of data does your app need to store on Dropbox?</i> {% trans 'select' %} <strong>Files and datastores</strong>  </p>
            <p>4. {% trans 'For question' %} <i>Can your app be limited to its own folder?</i> {% trans 'select' %} <strong>Yes </strong> </p>
            <p>5. {% trans 'Provide an app name and click on' %} <strong>Create app</strong> {% trans 'button' %}</p>
            <p>6. {% trans 'After app will be created please find' %} <strong>OAuth 2</strong> {% trans 'section and click on' %} <strong>Generate</strong> {% trans 'button' %}</p>
            <p>7. {% trans 'Once you click that button, you will see an OAuth 2 access token that you can use to make calls to the Dropbox API. Please copy and paste it into field below and click' %} <strong>{% trans 'Update' %}</strong> {% trans 'button' %}</p>
        </div>
        <fieldset>
            <div class="rowElem noborder">
                <label>{% trans 'Dropbox access token' %}</label>
                <div class="formRight">
                    <input type="text" name="access_token" value="{{params.access_token}}" placeholder="{% trans 'Dropbox access token' %}"/>
                </div>
                <div class="fix"></div>
            </div>

            <input type="submit" value="{% trans 'Update' %}" class="greyishBtn submitForm" />
            <input type="hidden" name="ext" value="mod_dropbox" />
        </fieldset>
        <hr/>
        <div class="help">
            <h3>{% trans 'Using extension' %}</h3>
            <p>This example will show you how to add <strong>ticket attachment</strong> functionality but feel free to use it in another context;</p>
            <p>1. Please copy template you want to edit <strong>[bb-modules/Support/html_client/mod_support_ticket.phtml]</strong> to your theme html folder <strong>[bb-themes/huraga/html]</strong> (otherwise during next update it will be overwritten). </p>
            <p>2. Add following lines of code to template you copied where you want upload form and download button to appear.</p>


            <div class="widget">
                <div class="head"><h5 class="iComputer">CLIENT template code for  (if file is not uploaded, upload form will be shown, otherwise download button will be visible)</h5></div>
                <pre class="showCodeJS">
                    {% raw %}
    {% if client.dropbox_has_upload({'rel_id':ticket.id, 'extension' : 'ticket'}) %}
        {% include 'mod_dropbox_download.phtml' with {'rel_id':ticket.id, 'extension' : 'ticket'} %}
    {% else %}
        {% include 'mod_dropbox_upload.phtml' with {'rel_id':ticket.id, 'extension' : 'ticket'} %}
    {% endif %}
                    {% endraw %}
                </pre>
            </div>
            <p>3. Make sure object (in this case ticket object) is present in template  and <strong>pass object ID as 'rel_id'</strong>.</p>
            <p>4. Repeat these steps for admin template in order to see download button in admin area.</p>
            <div class="widget">
                <div class="head"><h5 class="iComputer">ADMIN attachment download button code</h5></div>
                <pre class="showCodeJS">
                    {% raw %}
    {% if admin.dropbox_has_upload({'rel_id':ticket.id, 'extension' : 'ticket'}) %}
        {% include 'mod_dropbox_download.phtml' with {'rel_id':ticket.id, 'extension' : 'ticket'} %}
    {% endif %}
                    {% endraw %}
                </pre>
            </div>
        </div>
    </form>
</div>
{% endblock %}